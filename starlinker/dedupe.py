from typing import Tuple, Set, Dict, List
import pandas as pd
import streamlit as st
from .normalize import extract_uc_id, extract_handle, resolve_handle_to_channel_id

def load_existing_ids(
    youtube,
    df: pd.DataFrame,
    treat_bare_names: bool,
    do_normalize: bool,
    max_to_normalize: int
) -> Tuple[Set[str], Set[str], Dict[str, int]]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (existing_ids, existing_handles, stats):
      - existing_ids: –º–Ω–æ–∂–µ—Å—Ç–≤–æ channel_id (UC‚Ä¶)
      - existing_handles: –º–Ω–æ–∂–µ—Å—Ç–≤–æ handle (–±–µ–∑ @, lower)
      - stats: —Å—á–µ—Ç—á–∏–∫–∏
    """
    stats = {"taken_channel_id": 0, "extracted_from_url": 0, "normalized": 0, "unresolved": 0, "handles": 0}
    existing_ids: Set[str] = set()
    existing_handles: Set[str] = set()

    cols_lower = {c.lower(): c for c in df.columns}
    cid_col = next((orig for k, orig in cols_lower.items() if k in {"channel_id", "id"} or k.endswith("channel_id")), None)
    link_col = next((orig for k, orig in cols_lower.items() if any(t in k for t in ["—Å—Å—ã–ª", "link", "url"])), None)

    # 1) —è–≤–Ω—ã–µ channel_id
    if cid_col:
        for v in df[cid_col].dropna():
            uc = extract_uc_id(str(v))
            if uc:
                existing_ids.add(uc); stats["taken_channel_id"] += 1

    # 2) –∏–∑ —Å—Å—ã–ª–æ–∫: channel/UC‚Ä¶
    if link_col:
        for v in df[link_col].dropna():
            s = str(v)
            uc = extract_uc_id(s)
            if uc:
                existing_ids.add(uc); stats["extracted_from_url"] += 1

    # 3) —Å–æ–±—Ä–∞—Ç—å handle –∏–∑ –≤—Å–µ—Ö –∫–æ–ª–æ–Ω–æ–∫ (–≤–∫–ª—é—á–∞—è ¬´–≥–æ–ª—ã–µ¬ª, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
    #    –¥–µ–ª–∞–µ–º —ç—Ç–æ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç do_normalize ‚Äî –¥–ª—è –º–∞—Ç—á–∏–Ω–≥–∞ –ø–æ customUrl
    for c in df.columns:
        for v in df[c].dropna():
            h = extract_handle(str(v), treat_bare_names=treat_bare_names)
            if h:
                existing_handles.add(h)
    stats["handles"] = len(existing_handles)

    # 4) (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–∞—Å—Ç—å handle ‚Üí channel_id (—ç–∫–æ–Ω–æ–º–∏—Ç –±—É–¥—É—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã)
    if do_normalize and existing_handles:
        uniq = list(dict.fromkeys(existing_handles))[: max_to_normalize]
        resolved = 0
        prog = st.progress(0); status = st.empty()
        for i, h in enumerate(uniq, start=1):
            status.write(f"üîÅ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è @{h} ({i}/{len(uniq)})")
            uc = resolve_handle_to_channel_id(youtube, h)
            if uc:
                existing_ids.add(uc); resolved += 1
            prog.progress(int(i / max(1, len(uniq)) * 100))
        prog.empty(); status.empty()
        stats["normalized"] = resolved
        stats["unresolved"] = max(0, len(uniq) - resolved)

    return existing_ids, existing_handles, stats
